Multiple services under different category headers:
Compute, Developer Tools, Analytics etc.
New services are added all the time.

Critical services to know:
AWS Global Infrastructure
Networking and Content Delivery
Compute
Storage
Databases
Security & Identity
Management Tools
Messaging
Desktop and App Streaming

1) AWS Global Infratsructure
The physical infrastructure on which AWS runs - classified into regions and availability zones.
Globally 14 regions and 38 availability zones - 2016
More planned to be added in 2017
A region is a geographical area that consists of 2 or more availability zones.
An availability zone is simply a Data Center. Availability zones in a region will be close to each other, but not dependent on each other. Kind of like a backup, hence at least 2 AZs in a region.

Edge locations are CDN End Points fro CloudFront. CDNs cache large data files in data centers making them easily available. The first time a large data file is accessed from a remote location, it has to travel all the way - but the next time another user from the same region accesses the same file it will be cached locally. 66 Edge locations in 2016.

North America has 5 regions, the largest in the world

2) Networking and Content delivery:
VPC - Virtual Private Cloud (virtual data center) Very important for exam.
Route53 - Amazons DNS server. 53 is the DNS port.
CloudFront - part of CDN.
Direct Connect - dedicated connection to AWS (for security, pushing large data sets etc).

3) Compute:
EC2 - Elastic Compute Cloud, Virtual machines on the cloud 
EC2 Container Service - scalable container management service that manages Docker containers.
Elastic Beanstalk - If you know nothing about AWS and you want to run your app, you can upload your app into this, it takes care of everything.
Lambda - serverless, upload code and it responds to events.
Lightsail - out of the box service.

4) Storage:
S3 (simple storage service) - virtual disk in the cloud to store objects (files). Not used to install and app. Dropbox used it first.
Glacier - archive files when instant access is not needed. Low cost, take 
EFS - Elastic file servers, block-based storage, install dbs apps etc and share with multiple VMs
Storage Gateway - install on premises, communicate with S3

5) Databases:
RDS - Relational database service (MySQL, Postgres, Oracle, SQL server etc.)
DynamoDB - NoSQL scalable DB
Redshift - Data warehousing solution
Elasticache - caching your most frequently accessed data

6) Migration services:
Snowball - Tool/appliance for migrating terabytes worth of data. Do it yourself and send to Amazon. Snowball Edge can be used to have AWS on premises.
DMS - database migration services. Migrate dbs to the cloud. It handles all the data transfer. Supports all major DBs.
SMS: server migration services, to migrate VMs/serves onto the cloud.

7) Analytics:
Athena: allows running SQL queries on S3 (CSV files, JSON files etc), turns your flat files into databases
EMR - elastic map reduce, to process large amounts of data using Hadoop.
Cloud Search - search capabilities to your web app
Elastic Search - same, but based on open source
Kinesis - streaming and analyzing real time data, financial data etc
Data Pipeline - service that allows data from one place to another.
Quick Sight - business analytics tool

8) Security and Identity:
IAM - Identity Access Management. Fundamental entity in AWS.
Inspector - Agent you install on your VMs.
Certificate Manager - free SSL certificates
Directory Service - connect an AD to AWS
WAF - Wen Appln Firewall. Appln level support to your app (SQL injection, cross-site scripting)
Artifacts - Compliance documents

9) Management Tools:
CloudWatch - Monitor how your apps are doing, CPU , disk usage etc.
CloudFormation - Turning infrastructure into code instead of physical hardware like firewall etc. Very important.
CloudTrail - auditing changes to AWS environment.
Opsworks -
Config - automatic monitoring of your envnt.
Service Catalog
Trusted Advisor - optimization, security fixes etc

10) Application services:
Step Functions - what is going on inside your app
SWF - Simple workflow services, coordinating your requests with what needs to be dono your AWS accounte
API Gateway - create, publish, maintain your apps
AppStream - streaming desktop apps to clients
Elastic Transcoder - changes video formats to suit device

11) Developer Tools:
CodeCommit - Github, store code in the cloud
CodeBuild - compiling code
CodeDeploy - deploy to your EC2 instance
CodePipeline - keep track of diff versions of your code

12)Misc
Mobile Services:
Mobile Hub
Cognito
Device farm
Mobile Analytics
Pinpoint

Business Productivity:

IoT:
Devices to communicate and share data amongst themselves
Desktop & App Streaming:
Workspaces - Desptop in the cloud
AppStream

Artificial Intelligence:
Alexa - voice recognition service
Polly- text to speech service
Machine Learning
Rekognition - pic and facial recognition

Messaging:
SNS
SQS
SES
------------------------------------
Identity access management (IAM)
Allows you to manage users and their level of access to the AWS Console.
Multi factor authentication for root account - need multiple devices for security
Gives you centralized access of your AWS account.
Shared Access to your AWS account.
Users, Groups and Roles
Policies (defined in JSON) can be applied to all three
.
.
.
------------------------------------
Storage:
S3 Simple Storage Service
Object based storage - flat file storage as opposed to block based, which is used for servers/databases etc. 
Cloudberry provides windows explorer like interface to S3
Files can be 0-5TB in size, stored as buckets
Buckets must be named uniquely
Bucket has an URL associated with it usually of the format https://s3-<dns depending on amazon region>/<bucket name>
Once you have the URL you can upload the file and get an http response code that tells you if your upload was successful

Data Consistency in S3
- Read and Write consistency for PUTS of new Objects: you can read the object right away 
- updates might take a short while to propagate - you will get either the new version or the old, not partial ones - called atomic)

Object based storage, key-value store
- key is the name of the object and value is the data itself
- Version ID (for versioning)
- Metadata (Data about the data you are storing)
- Subresources
    - access control lists (who can access)
    - Torrent

99.9% availability, 99.9999...% durability
Tiered storage
Lifecycle management (upto 30 days at one place, then move elsewhere and after 90 days archive)
Encryption

Storage Tiers
S3 - stored across multiple facilities
S3-IA - Infrequently accessed data, lower fee than regular S3, but charged a retrieval fee
S3-RRS Reduced Redundancy Storage - eg.thumbnail storage
Glacier - Very cheap, used only for archival only, takes 3-5 hrs to restore

Creating an S3 bucket is pretty straightforward using the interface. Create bucket, upload file (for eg. a static HTML file).
Set permissions to public and you can view the file in a browser.

2 types of Permissions:
1) users - for AWS users
2) public - for the public
permissions can be set at bucket level or object/file level  

Versioning - If versioning is enabled at object creation (or later). Change the file and upload again (has to be same file name). It will appear as a single file but will show multiple versions in the version drop down. Not a good idea to upload large files that are frequently updated as each version will bloat the storage. Deleted versions are lost for good, but deleted objects (with all versions present at the time of deletion) can be restored.

Cross region replication - S3 buckets can be replicated across regions, but not within the same region. Versioning has to be enabled in bothe the source and destination buckets. Files are not replicated automatically at the time of replication, only at time of updates at the source (at which time all versions are replicated, not just the updated version). You can only replicate to one bucket, not to multiple buckets. Delete markers (which sort of hide the object when deleted) are replicated at the object level. 

Life cycle management:
Setting up rules to manage the lifecycle of the object after it has been created. For eg. move to 'Infrequently accessed' after 30 days, into 'Glacier' after 60 days and expire in 90 days.
----------------------------------
CloudFront:
A CDN (Content Delivery Network) is a system of distributed servers that deliver web content to users based on their geopgraphical location.
Edge location: location where content will be cached.
Origin: origin of all files that the CDN will distribute. This can be an S3 bucket, an EC2 instance, an elastic load balancer etc.
The CloudFront is used to deliver content using a global network of edge locations automatically routing requests to the nearest edge location. It is optimized to work with S3, EC2 and other amazon services.
----------------------------------
Security and Encryption:
By default S3 buckets are private. They can be opened up and then secured using:
1) Bucket policies
2) Access control lists

access logs can be configured for buckets.

Encryption:
1) In Transit
	SSL/TLS
2) At Rest (on the server)
	Server side
		S3 managed keys - SSE-S3
		AWS Key management service - SSE-KMS
		Customer - provided keys SSE-C
	Client Side
		Data encrypted on the client side using whatever tech and uploaded to AWS.
-------------------------
Storage Gateway:
Service that connects an on-premises software appliance with AWS storage to securely store data. Available for download as a VM that can be installed on a host computer in the client's data center.

4 types:
1) File Gateway (NFS) - to store flat files. Files stored in S3 and accessed through an NFS mount point. Cheapest option.

2) Volumes Gateway (iSCSI) - disk based storage, presents your application with disk volumes. Point in time snapshots. Most recently read data is stored in cache, rest in S3. Lots of data and dont want to keep it all onsite.
    Stored Volumes: Entire dataset is stored on site and is asynchronously backed up to S3
    Cached volumes: Entire dataset stored on S3 and the most frequently used is cached on site

3) Tape Gateway - Virtual Tape Library (VTL)
    Used for backup
-------------------------

Snowball
To move large amounts of data into and out of AWS, you can use the Import/Export feature by sending in a disk to avoid copying over the network. To avoid the logistics issues with this, Amazon released Snowball. Import from or export into S3 from snowball.

Snowball - physical device, quite big, bigger than a suitcase. Petabyte-scale data transport solutions that uses secure appliances to transfer large amounts of data into and out of AWS.

Snowball Edge - similar to Snowball, but contains compute capacity, so almost like a portable AWS data center.

Snowmobile - massive 45 foot long, peta/exa byte scale transfer

Get a snowball, power it up, connect the ethernet cable to your local data storage device, copy the data and then ship it back to Amazon. The data will eventually end up in an S3 bucket in your account.
-------------------------
S3 Transfer Acceleration
To speed up uploads to your S3, upload to a CloudFront Edge location, which will then transfer the file to S3. Will incur an additional fee.
-------------------------

Creating a static website on S3
    Serverless static page storage
    
---------------------------------------------------------------------------------------
EC2 - Elastic Compute Cloud, the backbone of AWS
Web service that provides resizable compute capacity in the cloud. It allows you to create new server instances in minutes. Can quickly scale up or down. Virtual servers on the cloud.

EC2 pricing options:
1) On demand - pay a fixed rate per hour of usage (for unpredictable usage patterns).
2) Reserved - provides you with a capacity reservation and offers discounts on hourly rates (apps that have steady state usage). Upfront payments for a contract period like 1-3 yrs reduces hourly cost.
3) Spot - bid for compute capacity, especially during low usage times (for eg. to run high compute load one-off jobs during off peak hrs)
4) Dedicated hosts - dedicated physical servers that help you to reduce costs. Some licensing agreements might require physical servers.

Instance types:
T2 - low cost general purpose - web servers/small DBs, most common
M4 - general purpose appln servers
G2 - Graphics intensive
P2 - General purpose GPU intensive (ML)
C4 - CPU intenseive apps
D2 - Dense storage (File servers, warehousing, Hadoop)
I2 - high speed storage (IO intensive - NoSQL DB)
R4 - memory optimized (memory intensive apps/DBs)
X1 - extreme memory optimized (Apache Spark)
F1 - new, field programmable gate array (hardware acceleration for your code)

EBS - Elastic block store. Block-based storage for EC2, enables creation of file systems, run a database etc. Replicated across a specific availability zone, so not attached to a device or server.
4 diff types:
SSDs:
1) General purpose SSD - most common. 3 IOPS per GB, can go upto 3000 for volumes under 1GB.
2) Provisioned SSD - IO intensive apps. > 10,000 IOPS. Big databases, NoSQL db etc. can go upto 20000 IOPS
Magnetic storage:
3) Througput optimized SSD - for large amounts of sequential data. Cannot boot from it.
4) Cold HDD - lowest cost. For file servers etc. Cannot boot from it
5) Magnetic standard - lowest cost bootable storage.
 
You cannot mount one EBS volume on multiple instances. The EBS root volumes on default AMIs cannot be encrypted. You'll need to create a copy of the AMI and then you can encrypt the root volume on the copy. Additinal volumes can be encrypted.

Creating an EC2 instance is done though the web console, fairly starightforward provisioning of resources. Make sure to add 'tags' to the instance that describes the instance best (as name-value pairs), it helps to track the instance. Set security groups to enable access like SSH, HTTP etc.

When the instance is ready to be spun up, it will ask to create a key-pair (public/private). Public key is the lock and private is the key to unlock it. 

